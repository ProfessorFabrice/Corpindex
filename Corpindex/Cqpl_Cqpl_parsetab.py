
# Cqpl_Cqpl_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftETleft|ATT GROUPE MOT NUM VALATT WITHIN ZONEensmot : ensmot WITHIN GROUPEensmot : ensmot WITHIN NUMensmot :  ensmot ensmot %prec ETensmot :  ensmot "|" ensmotensmot : "(" ensmot ")"ensmot : "(" ensmot ")" "?"ensmot : mot\n\t\tmot : \'[\' motmod \']\'\n\t\t\t| \'[\' motmod \']\' \'?\'\n\t\t\n\t\tmotmod : defmot\n\t\t\t| defmot "/" modif\n\t\t\t| defmot ZONE NUM\n\t\t\n\t\tdefmot : attval\n\t\t\t| defmot \'&\' defmot  %prec ET\n\t\t\t| defmot \'|\' defmot\n\t\t\t| defmot \',\' defmot\n\t\t\t| \'(\' defmot \')\'\n\t\t\t| \'!\' defmot\n\t\t\n\t\tattval : ATT \'=\' VALATT\n\t\t\t| ATT \'~\' VALATT\n\t\t\t| \'+\' attval\n\t\t\t| \'-\' attval\n\t\t\t| \'@\' ATT\n\t\t\t| MOT\n\t\t\n\t\tmodif : attval\n\t\t\t| modif \',\' attval\n\t\t\t|\n\t\t'
    
_lr_action_items = {'(':([0,1,2,3,4,5,7,8,12,13,19,20,21,22,23,26,27,28,36,37,],[2,2,2,-7,12,-3,2,2,12,12,-1,-2,-4,-5,-8,12,12,12,-6,-9,]),'[':([0,1,2,3,5,7,8,19,20,21,22,23,36,37,],[4,4,4,-7,-3,4,4,-1,-2,-4,-5,-8,-6,-9,]),'$end':([1,3,5,19,20,21,22,23,36,37,],[0,-7,-3,-1,-2,-4,-5,-8,-6,-9,]),'WITHIN':([1,3,5,8,19,20,21,22,23,36,37,],[6,-7,-3,6,-1,-2,-4,-5,-8,-6,-9,]),'|':([1,3,5,8,10,11,18,19,20,21,22,23,29,30,33,34,35,36,37,41,42,43,44,45,46,],[7,-7,7,7,27,-13,-24,-1,-2,-4,-5,-8,27,27,-21,-22,-23,-6,-9,27,-15,27,-17,-19,-20,]),')':([3,5,8,11,18,19,20,21,22,23,29,30,33,34,35,36,37,41,42,43,44,45,46,],[-7,-3,22,-13,-24,-1,-2,-4,-5,-8,44,-18,-21,-22,-23,-6,-9,-14,-15,-16,-17,-19,-20,]),'!':([4,12,13,26,27,28,],[13,13,13,13,13,13,]),'ATT':([4,12,13,15,16,17,24,26,27,28,47,],[14,14,14,14,14,35,14,14,14,14,14,]),'+':([4,12,13,15,16,24,26,27,28,47,],[15,15,15,15,15,15,15,15,15,15,]),'-':([4,12,13,15,16,24,26,27,28,47,],[16,16,16,16,16,16,16,16,16,16,]),'@':([4,12,13,15,16,24,26,27,28,47,],[17,17,17,17,17,17,17,17,17,17,]),'MOT':([4,12,13,15,16,24,26,27,28,47,],[18,18,18,18,18,18,18,18,18,18,]),'GROUPE':([6,],[19,]),'NUM':([6,25,],[20,40,]),']':([9,10,11,18,24,30,33,34,35,38,39,40,41,42,43,44,45,46,48,],[23,-10,-13,-24,-27,-18,-21,-22,-23,-11,-25,-12,-14,-15,-16,-17,-19,-20,-26,]),'/':([10,11,18,30,33,34,35,41,42,43,44,45,46,],[24,-13,-24,-18,-21,-22,-23,-14,-15,-16,-17,-19,-20,]),'ZONE':([10,11,18,30,33,34,35,41,42,43,44,45,46,],[25,-13,-24,-18,-21,-22,-23,-14,-15,-16,-17,-19,-20,]),'&':([10,11,18,29,30,33,34,35,41,42,43,44,45,46,],[26,-13,-24,26,26,-21,-22,-23,-14,-15,26,-17,-19,-20,]),',':([10,11,18,24,29,30,33,34,35,38,39,41,42,43,44,45,46,48,],[28,-13,-24,-27,28,28,-21,-22,-23,47,-25,-14,-15,28,-17,-19,-20,-26,]),'=':([14,],[31,]),'~':([14,],[32,]),'?':([22,23,],[36,37,]),'VALATT':([31,32,],[45,46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ensmot':([0,1,2,5,7,8,21,],[1,5,8,5,21,5,5,]),'mot':([0,1,2,5,7,8,21,],[3,3,3,3,3,3,3,]),'motmod':([4,],[9,]),'defmot':([4,12,13,26,27,28,],[10,29,30,41,42,43,]),'attval':([4,12,13,15,16,24,26,27,28,47,],[11,11,11,33,34,39,11,11,11,48,]),'modif':([24,],[38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ensmot","S'",1,None,None,None),
  ('ensmot -> ensmot WITHIN GROUPE','ensmot',3,'p_expr_groupe','Cqpl.py',162),
  ('ensmot -> ensmot WITHIN NUM','ensmot',3,'p_expr_groupe_num','Cqpl.py',167),
  ('ensmot -> ensmot ensmot','ensmot',2,'p_expr','Cqpl.py',172),
  ('ensmot -> ensmot | ensmot','ensmot',3,'p_expr_ou','Cqpl.py',177),
  ('ensmot -> ( ensmot )','ensmot',3,'p_expr_parenthese','Cqpl.py',182),
  ('ensmot -> ( ensmot ) ?','ensmot',4,'p_expr_parenthese_opt','Cqpl.py',187),
  ('ensmot -> mot','ensmot',1,'p_expr_mot','Cqpl.py',192),
  ('mot -> [ motmod ]','mot',3,'p_mot','Cqpl.py',199),
  ('mot -> [ motmod ] ?','mot',4,'p_mot','Cqpl.py',200),
  ('motmod -> defmot','motmod',1,'p_motmod','Cqpl.py',209),
  ('motmod -> defmot / modif','motmod',3,'p_motmod','Cqpl.py',210),
  ('motmod -> defmot ZONE NUM','motmod',3,'p_motmod','Cqpl.py',211),
  ('defmot -> attval','defmot',1,'p_defmot','Cqpl.py',223),
  ('defmot -> defmot & defmot','defmot',3,'p_defmot','Cqpl.py',224),
  ('defmot -> defmot | defmot','defmot',3,'p_defmot','Cqpl.py',225),
  ('defmot -> defmot , defmot','defmot',3,'p_defmot','Cqpl.py',226),
  ('defmot -> ( defmot )','defmot',3,'p_defmot','Cqpl.py',227),
  ('defmot -> ! defmot','defmot',2,'p_defmot','Cqpl.py',228),
  ('attval -> ATT = VALATT','attval',3,'p_attval','Cqpl.py',245),
  ('attval -> ATT ~ VALATT','attval',3,'p_attval','Cqpl.py',246),
  ('attval -> + attval','attval',2,'p_attval','Cqpl.py',247),
  ('attval -> - attval','attval',2,'p_attval','Cqpl.py',248),
  ('attval -> @ ATT','attval',2,'p_attval','Cqpl.py',249),
  ('attval -> MOT','attval',1,'p_attval','Cqpl.py',250),
  ('modif -> attval','modif',1,'p_modif','Cqpl.py',269),
  ('modif -> modif , attval','modif',3,'p_modif','Cqpl.py',270),
  ('modif -> <empty>','modif',0,'p_modif','Cqpl.py',271),
]
